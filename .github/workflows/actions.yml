name: Trigger PubDev Release

on:
  push:
    branches:
      - dev

jobs:
  analyze-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pana analyzer
        uses: axel-op/dart-package-analyzer@v3
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
        id: pana-analysis

      - name: Set outputs
        id: set-outputs
        run: |
          echo "TOTAL=${{ steps.pana-analysis.outputs.total }}"
          echo "TOTAL_MAX=${{ steps.pana-analysis.outputs.total_max }}"

      - name: Checking pana scores
        env:
          TOTAL: ${{ steps.pana-analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.pana-analysis.outputs.total_max }}
        run: |
          PERCENTAGE=$(( $TOTAL ))
          if (( $PERCENTAGE < 110 )); then
            echo "Score too low!"
            exit 1
          fi
          echo "Score is satisfactory. Proceeding to build."

  build-and-publish:
    runs-on: ubuntu-latest
    needs: analyze-package
    if: ${{ needs.analyze-package.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter environment
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Flutter version Check
        run: flutter --version

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Check for formatting issues
        run: dart format --set-exit-if-changed .

      - name: Statically analyze Dart code
        run: flutter analyze .

      - name: Run widget tests
        run: flutter test

      - name: Publish package dry run
        run: flutter pub publish --dry-run

      - name: Extract version from pubspec.yaml
        id: extract-version
        run: |
          VERSION=$(grep version: pubspec.yaml | awk '{print $2}' | tr -d "'")
          if [[ -z "$VERSION" ]]; then
            echo "Error: VERSION variable is empty. Skipping tag creation."
            exit 1
          fi
          echo "Extracted version: $VERSION"
          echo "VERSION= ${{ steps.extract-version.outputs.VERSION }}"

  release-on-push:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Extract version from pubspec.yaml
        id: extract-version
        run: |
          VERSION=$(grep version: pubspec.yaml | awk '{print $2}' | tr -d "'")
          echo "Extracted version: $VERSION"

  create-tag:
    runs-on: ubuntu-22.04
    if: github.event.pull_request.merged == true
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: "0"

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0 # Don't use @master or @v1 unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          WITH_V: true
          PRERELEASE: false
