name: Trigger PubDev Release

on:
  workflow_dispatch:

jobs:
  analyze-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pana analyzer
        uses: axel-op/dart-package-analyzer@v3
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
        id: pana-analysis

      - name: Set outputs
        id: set-outputs
        run: |
          echo "TOTAL=${{ steps.pana-analysis.outputs.total }}"
          echo "TOTAL_MAX=${{ steps.pana-analysis.outputs.total_max }}"

      - name: Checking pana scores
        env:
          TOTAL: ${{ steps.pana-analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.pana-analysis.outputs.total_max }}
        run: |
          PERCENTAGE=$(( $TOTAL ))
          if (( $PERCENTAGE < 110 )); then
            echo "Score too low!"
            exit 1
          fi
          echo "Score is satisfactory. Proceeding to build."

  build-and-publish:
    runs-on: ubuntu-latest
    needs: analyze-package
    if: ${{ needs.analyze-package.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java environment
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Setup Flutter environment
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Check for formatting issues
        run: dart format --set-exit-if-changed .

      - name: Statically analyze Dart code
        run: flutter analyze .

      - name: Run widget tests
        run: flutter test

      - name: Publish package dry run
        run: flutter pub publish --dry-run

      - name: Extract version from pubspec.yaml
        id: extract-version
        run: |
          VERSION=$(grep version: pubspec.yaml | awk '{print $2}' | tr -d "'")
          echo "Extracted version: $VERSION"

      - name: Set up Git user
        uses: fregante/setup-git-user@v2

      - name: Create and push tag
        if: ${{ needs.analyze-package.result == 'success' }}
        run: |
          git tag -a "$VERSION" -m "Release $VERSION
          git push origin "$VERSION"
